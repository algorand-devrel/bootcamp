{
    "hints": {
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "difference(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "multiply(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "opt_in()void": {
            "call_config": {
                "opt_in": "CALL"
            }
        },
        "test()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add(pay,uint64,uint64,account)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_global_sum()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_local_sum()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSA5OTkKYnl0ZWNibG9jayAweDE1MWY3Yzc1IDB4IDB4NmM2MTczNzQ1ZjczNzU2ZCAweDZkNzk1ZjZjNjE3Mzc0NWY3Mzc1NmQgMHg2YzYxNzM3NDVmNmQ3NTZjNzQ2OTcwNmM3OQp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sMTgKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgwMmJlY2UxMSAvLyAiaGVsbG8oc3RyaW5nKXN0cmluZyIKPT0KYm56IG1haW5fbDE3CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4NjQwZTEwNjcgLy8gImRpZmZlcmVuY2UodWludDY0LHVpbnQ2NCl1aW50NjQiCj09CmJueiBtYWluX2wxNgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDc2NjA4M2E3IC8vICJtdWx0aXBseSh1aW50NjQsdWludDY0KXVpbnQ2NCIKPT0KYm56IG1haW5fbDE1CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4MzBjNmQ1OGEgLy8gIm9wdF9pbigpdm9pZCIKPT0KYm56IG1haW5fbDE0CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4NGU2NTQ0NzYgLy8gInRlc3QoKXN0cmluZyIKPT0KYm56IG1haW5fbDEzCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZjBiMDM5ZjkgLy8gImFkZChwYXksdWludDY0LHVpbnQ2NCxhY2NvdW50KXVpbnQ2NCIKPT0KYm56IG1haW5fbDEyCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZTk4NWYyMmUgLy8gInJlYWRfZ2xvYmFsX3N1bSgpdWludDY0Igo9PQpibnogbWFpbl9sMTEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg5ZWE3ZTZlMCAvLyAicmVhZF9sb2NhbF9zdW0oKXVpbnQ2NCIKPT0KYm56IG1haW5fbDEwCmVycgptYWluX2wxMDoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiByZWFkbG9jYWxzdW1jYXN0ZXJfMTYKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDExOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHJlYWRnbG9iYWxzdW1jYXN0ZXJfMTUKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEyOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGFkZGNhc3Rlcl8xNAppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTM6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgdGVzdGNhc3Rlcl8xMwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTQ6CnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE9wdEluCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIG9wdGluY2FzdGVyXzEyCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxNToKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBtdWx0aXBseWNhc3Rlcl8xMQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgZGlmZmVyZW5jZWNhc3Rlcl8xMAppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTc6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgaGVsbG9jYXN0ZXJfOQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTg6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDIwCmVycgptYWluX2wyMDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBjcmVhdGUKY3JlYXRlXzA6CnByb3RvIDAgMApieXRlYyA0IC8vICJsYXN0X211bHRpcGx5IgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18yIC8vICJsYXN0X3N1bSIKaW50Y18yIC8vIDk5OQphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIGhlbGxvCmhlbGxvXzE6CnByb3RvIDEgMQpieXRlY18xIC8vICIiCnB1c2hieXRlcyAweDQ4NmY2YzYxMmMyMCAvLyAiSG9sYSwgIgpmcmFtZV9kaWcgLTEKZXh0cmFjdCAyIDAKY29uY2F0CmZyYW1lX2J1cnkgMApmcmFtZV9kaWcgMApsZW4KaXRvYgpleHRyYWN0IDYgMApmcmFtZV9kaWcgMApjb25jYXQKZnJhbWVfYnVyeSAwCnJldHN1YgoKLy8gZGlmZmVyZW5jZQpkaWZmZXJlbmNlXzI6CnByb3RvIDIgMQppbnRjXzAgLy8gMApmcmFtZV9kaWcgLTIKZnJhbWVfZGlnIC0xCj4KYm56IGRpZmZlcmVuY2VfMl9sNApmcmFtZV9kaWcgLTIKZnJhbWVfZGlnIC0xCj09CmJueiBkaWZmZXJlbmNlXzJfbDMKZnJhbWVfZGlnIC0xCmZyYW1lX2RpZyAtMgotCmZyYW1lX2J1cnkgMApiIGRpZmZlcmVuY2VfMl9sNQpkaWZmZXJlbmNlXzJfbDM6CnB1c2hpbnQgMTMzNyAvLyAxMzM3CmZyYW1lX2J1cnkgMApiIGRpZmZlcmVuY2VfMl9sNQpkaWZmZXJlbmNlXzJfbDQ6CmZyYW1lX2RpZyAtMgpmcmFtZV9kaWcgLTEKLQpmcmFtZV9idXJ5IDAKZGlmZmVyZW5jZV8yX2w1OgpyZXRzdWIKCi8vIG11bHRpcGx5Cm11bHRpcGx5XzM6CnByb3RvIDIgMQppbnRjXzAgLy8gMApieXRlYyA0IC8vICJsYXN0X211bHRpcGx5IgpmcmFtZV9kaWcgLTIKZnJhbWVfZGlnIC0xCioKYXBwX2dsb2JhbF9wdXQKZnJhbWVfZGlnIC0yCmZyYW1lX2RpZyAtMQoqCmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIG9wdF9pbgpvcHRpbl80Ogpwcm90byAwIDAKdHhuIFNlbmRlcgpieXRlY18zIC8vICJteV9sYXN0X3N1bSIKaW50Y18yIC8vIDk5OQphcHBfbG9jYWxfcHV0CnJldHN1YgoKLy8gdGVzdAp0ZXN0XzU6CnByb3RvIDAgMQpieXRlY18xIC8vICIiCnB1c2hieXRlcyAweDQzNzU2NTZlNzQ2MTMxM2EyMCAvLyAiQ3VlbnRhMTogIgpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwpjb25jYXQKcHVzaGJ5dGVzIDB4MmQyZDJkMmQzMjNhMjAgLy8gIi0tLS0yOiAiCmNvbmNhdApnbG9iYWwgQ3JlYXRvckFkZHJlc3MKY29uY2F0CmZyYW1lX2J1cnkgMApmcmFtZV9kaWcgMApsZW4KaXRvYgpleHRyYWN0IDYgMApmcmFtZV9kaWcgMApjb25jYXQKZnJhbWVfYnVyeSAwCnJldHN1YgoKLy8gYWRkCmFkZF82Ogpwcm90byA0IDEKaW50Y18wIC8vIDAKZnJhbWVfZGlnIC00Cmd0eG5zIFJlY2VpdmVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCj09CmFzc2VydApmcmFtZV9kaWcgLTQKZ3R4bnMgQW1vdW50CnB1c2hpbnQgNTAwMDAwIC8vIDUwMDAwMAo+PQphc3NlcnQKYnl0ZWNfMiAvLyAibGFzdF9zdW0iCmZyYW1lX2RpZyAtMwpmcmFtZV9kaWcgLTIKKwphcHBfZ2xvYmFsX3B1dAp0eG4gU2VuZGVyCmJ5dGVjXzMgLy8gIm15X2xhc3Rfc3VtIgpmcmFtZV9kaWcgLTMKZnJhbWVfZGlnIC0yCisKYXBwX2xvY2FsX3B1dAppdHhuX2JlZ2luCmludGNfMSAvLyBwYXkKaXR4bl9maWVsZCBUeXBlRW51bQpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKaXR4bl9maWVsZCBSZWNlaXZlcgpmcmFtZV9kaWcgLTQKZ3R4bnMgQW1vdW50CnB1c2hpbnQgMiAvLyAyCi8KaXR4bl9maWVsZCBBbW91bnQKaXR4bl9zdWJtaXQKZnJhbWVfZGlnIC0zCmZyYW1lX2RpZyAtMgorCmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIHJlYWRfZ2xvYmFsX3N1bQpyZWFkZ2xvYmFsc3VtXzc6CnByb3RvIDAgMQppbnRjXzAgLy8gMApieXRlY18yIC8vICJsYXN0X3N1bSIKYXBwX2dsb2JhbF9nZXQKZnJhbWVfYnVyeSAwCnJldHN1YgoKLy8gcmVhZF9sb2NhbF9zdW0KcmVhZGxvY2Fsc3VtXzg6CnByb3RvIDAgMQppbnRjXzAgLy8gMAp0eG4gU2VuZGVyCmJ5dGVjXzMgLy8gIm15X2xhc3Rfc3VtIgphcHBfbG9jYWxfZ2V0CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIGhlbGxvX2Nhc3RlcgpoZWxsb2Nhc3Rlcl85Ogpwcm90byAwIDAKYnl0ZWNfMSAvLyAiIgpkdXAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpmcmFtZV9idXJ5IDEKZnJhbWVfZGlnIDEKY2FsbHN1YiBoZWxsb18xCmZyYW1lX2J1cnkgMApieXRlY18wIC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIGRpZmZlcmVuY2VfY2FzdGVyCmRpZmZlcmVuY2VjYXN0ZXJfMTA6CnByb3RvIDAgMAppbnRjXzAgLy8gMApkdXBuIDIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCmZyYW1lX2J1cnkgMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKZnJhbWVfYnVyeSAyCmZyYW1lX2RpZyAxCmZyYW1lX2RpZyAyCmNhbGxzdWIgZGlmZmVyZW5jZV8yCmZyYW1lX2J1cnkgMApieXRlY18wIC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKaXRvYgpjb25jYXQKbG9nCnJldHN1YgoKLy8gbXVsdGlwbHlfY2FzdGVyCm11bHRpcGx5Y2FzdGVyXzExOgpwcm90byAwIDAKaW50Y18wIC8vIDAKZHVwbiAyCnR4bmEgQXBwbGljYXRpb25BcmdzIDEKYnRvaQpmcmFtZV9idXJ5IDEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpidG9pCmZyYW1lX2J1cnkgMgpmcmFtZV9kaWcgMQpmcmFtZV9kaWcgMgpjYWxsc3ViIG11bHRpcGx5XzMKZnJhbWVfYnVyeSAwCmJ5dGVjXzAgLy8gMHgxNTFmN2M3NQpmcmFtZV9kaWcgMAppdG9iCmNvbmNhdApsb2cKcmV0c3ViCgovLyBvcHRfaW5fY2FzdGVyCm9wdGluY2FzdGVyXzEyOgpwcm90byAwIDAKY2FsbHN1YiBvcHRpbl80CnJldHN1YgoKLy8gdGVzdF9jYXN0ZXIKdGVzdGNhc3Rlcl8xMzoKcHJvdG8gMCAwCmJ5dGVjXzEgLy8gIiIKY2FsbHN1YiB0ZXN0XzUKZnJhbWVfYnVyeSAwCmJ5dGVjXzAgLy8gMHgxNTFmN2M3NQpmcmFtZV9kaWcgMApjb25jYXQKbG9nCnJldHN1YgoKLy8gYWRkX2Nhc3RlcgphZGRjYXN0ZXJfMTQ6CnByb3RvIDAgMAppbnRjXzAgLy8gMApkdXBuIDQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCmZyYW1lX2J1cnkgMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKZnJhbWVfYnVyeSAzCnR4bmEgQXBwbGljYXRpb25BcmdzIDMKaW50Y18wIC8vIDAKZ2V0Ynl0ZQpmcmFtZV9idXJ5IDQKdHhuIEdyb3VwSW5kZXgKaW50Y18xIC8vIDEKLQpmcmFtZV9idXJ5IDEKZnJhbWVfZGlnIDEKZ3R4bnMgVHlwZUVudW0KaW50Y18xIC8vIHBheQo9PQphc3NlcnQKZnJhbWVfZGlnIDEKZnJhbWVfZGlnIDIKZnJhbWVfZGlnIDMKZnJhbWVfZGlnIDQKY2FsbHN1YiBhZGRfNgpmcmFtZV9idXJ5IDAKYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCml0b2IKY29uY2F0CmxvZwpyZXRzdWIKCi8vIHJlYWRfZ2xvYmFsX3N1bV9jYXN0ZXIKcmVhZGdsb2JhbHN1bWNhc3Rlcl8xNToKcHJvdG8gMCAwCmludGNfMCAvLyAwCmNhbGxzdWIgcmVhZGdsb2JhbHN1bV83CmZyYW1lX2J1cnkgMApieXRlY18wIC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKaXRvYgpjb25jYXQKbG9nCnJldHN1YgoKLy8gcmVhZF9sb2NhbF9zdW1fY2FzdGVyCnJlYWRsb2NhbHN1bWNhc3Rlcl8xNjoKcHJvdG8gMCAwCmludGNfMCAvLyAwCmNhbGxzdWIgcmVhZGxvY2Fsc3VtXzgKZnJhbWVfYnVyeSAwCmJ5dGVjXzAgLy8gMHgxNTFmN2M3NQpmcmFtZV9kaWcgMAppdG9iCmNvbmNhdApsb2cKcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "last_multiply": {
                    "type": "uint64",
                    "key": "last_multiply",
                    "descr": ""
                },
                "last_sum": {
                    "type": "uint64",
                    "key": "last_sum",
                    "descr": "Ultima suma"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "my_last_sum": {
                    "type": "uint64",
                    "key": "my_last_sum",
                    "descr": "Ultima suma local"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Calculator",
        "methods": [
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "difference",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "multiply",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "opt_in",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "add",
                "args": [
                    {
                        "type": "pay",
                        "name": "p"
                    },
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    },
                    {
                        "type": "account",
                        "name": "acc"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "read_global_sum",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "read_local_sum",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}