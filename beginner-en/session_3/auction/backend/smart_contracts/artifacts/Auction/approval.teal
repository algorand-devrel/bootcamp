#pragma version 8
intcblock 0 1 4
bytecblock 0x617361 0x61756374696f6e5f656e64 0x6173615f616d6f756e74 0x70726576696f75735f626964
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x2826b202 // "opt_into_asset(asset)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0xf0aa7023 // "start_auction(uint64,uint64,axfer)void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub startauctioncaster_5
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optintoassetcaster_4
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
txn OnCompletion
intc_1 // OptIn
==
bnz main_l9
err
main_l9:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_3
intc_1 // 1
return
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_0 // "asa"
intc_0 // 0
app_global_put
bytec_2 // "asa_amount"
intc_0 // 0
app_global_put
bytec_1 // "auction_end"
intc_0 // 0
app_global_put
bytec_3 // "previous_bid"
intc_0 // 0
app_global_put
pushbytes 0x70726576696f75735f626964646572 // "previous_bidder"
pushbytes 0x // ""
app_global_put
retsub

// opt_into_asset
optintoasset_1:
proto 1 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_0 // "asa"
app_global_get
intc_0 // 0
==
assert
bytec_0 // "asa"
frame_dig -1
txnas Assets
app_global_put
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field AssetReceiver
frame_dig -1
txnas Assets
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// start_auction
startauction_2:
proto 3 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_1 // "auction_end"
app_global_get
intc_0 // 0
==
assert
bytec_3 // "previous_bid"
frame_dig -3
app_global_put
bytec_1 // "auction_end"
frame_dig -2
global LatestTimestamp
+
app_global_put
frame_dig -1
gtxns AssetReceiver
global CurrentApplicationAddress
==
assert
bytec_2 // "asa_amount"
frame_dig -1
gtxns AssetAmount
app_global_put
bytec_0 // "asa"
frame_dig -1
gtxns XferAsset
app_global_put
retsub

// opt_in
optin_3:
proto 0 0
txn Sender
pushbytes 0x636c61696d61626c655f616d6f756e74 // "claimable_amount"
intc_0 // 0
app_local_put
retsub

// opt_into_asset_caster
optintoassetcaster_4:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub optintoasset_1
retsub

// start_auction_caster
startauctioncaster_5:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 2
frame_dig 2
gtxns TypeEnum
intc_2 // axfer
==
assert
frame_dig 0
frame_dig 1
frame_dig 2
callsub startauction_2
retsub