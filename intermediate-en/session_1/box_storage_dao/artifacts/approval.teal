#pragma version 8
intcblock 0 1
bytecblock 0x762d 0x77696e6e696e675f70726f706f73616c5f766f746573 0x702d 0x682d 0x77696e6e696e675f70726f706f73616c
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x885de27f // "add_proposal(string)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0x27b68892 // "support(address)void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub support_2
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub addproposal_1
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec 4 // "winning_proposal"
pushbytes 0x // ""
app_global_put
bytec_1 // "winning_proposal_votes"
intc_0 // 0
app_global_put
retsub

// add_proposal
addproposal_1:
proto 1 0
bytec_2 // "p-"
txn Sender
concat
box_len
store 1
store 0
load 1
intc_0 // 0
==
assert
bytec_2 // "p-"
txn Sender
concat
box_del
pop
bytec_2 // "p-"
txn Sender
concat
frame_dig -1
box_put
retsub

// support
support_2:
proto 1 0
intc_0 // 0
dupn 3
bytec_3 // "h-"
txn Sender
concat
box_len
store 3
store 2
load 3
intc_0 // 0
==
assert
bytec_0 // "v-"
frame_dig -1
concat
box_len
store 5
store 4
load 5
bnz support_2_l3
support_2_l1:
frame_dig 1
intc_1 // 1
+
frame_bury 0
bytec_0 // "v-"
frame_dig -1
concat
box_del
pop
bytec_0 // "v-"
frame_dig -1
concat
frame_dig 0
itob
box_put
frame_dig 0
bytec_1 // "winning_proposal_votes"
app_global_get
>
bz support_2_l4
bytec_1 // "winning_proposal_votes"
frame_dig 0
app_global_put
bytec 4 // "winning_proposal"
frame_dig -1
app_global_put
b support_2_l4
support_2_l3:
bytec_0 // "v-"
frame_dig -1
concat
box_get
store 7
store 6
load 7
assert
load 6
btoi
frame_bury 1
b support_2_l1
support_2_l4:
intc_1 // 1
frame_bury 2
bytec_3 // "h-"
txn Sender
concat
box_del
pop
bytec_3 // "h-"
txn Sender
concat
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig 2
setbit
box_put
retsub