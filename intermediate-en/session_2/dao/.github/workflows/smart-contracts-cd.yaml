name: Backend CD

on:
  workflow_call:

concurrency: release

jobs:
  ci-check:
    name: Perform smart contract checks
    uses: ./.github/workflows/smart-contracts-ci.yaml

  deploy-testnet:
    runs-on: 'ubuntu-latest'
    needs: ci-check
    environment: Test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install algokit
        run: pipx install algokit

      - name: Bootstrap dependencies
        working-directory: ./backend
        run: algokit bootstrap all

      - name: Configure git
        shell: bash
        working-directory: ./backend
        run: |
          # set git user and email as test invoke git
          git config --global user.email "actions@github.com" && git config --global user.name "github-actions"

      - name: Deploy to testnet
        working-directory: ./backend
        run: algokit deploy testnet
        env:
          # This is the account that becomes the creator of the contract.
          # Since we are not using the optional dispenser account (via DISPENSER_MNEMONIC),
          # it must also be funded with enough Algos to deploy and fund the smart contracts created
          DEPLOYER_MNEMONIC: ${{ secrets.DEPLOYER_MNEMONIC }}
